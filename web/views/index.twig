{% extends "layout.html" %}

{% block content %}
<div class="container">
  <div class="page-header">
    <h1>Covering Matrix Plotter</h1>
    <span>Plot covering matrix topology on google maps using a topology description json file</span>
  </div>
  <div class="row">
    <div class="col-md-12">
      <h3><span class="glyphicon glyphicon-info-sign"></span> How to use this tool?</h3>
      <ul>
        <li>Load your json topology file.</li>
        <li>That's it. You can load your finished topology too.
      </ul>
      <div>
        <label class="control-label">Select File</label>
        <input id="input-1" name="input1[]" type="file" class="file file-loading" data-allowed-file-extensions='["json"]' data-show-preview="false" data-show-upload="false">
      </div>
    </div>
    <div class="col-md-12">
      <h3><span class="glyphicon glyphicon-link"></span> Topology Loaded </h3>
      <div>

        <h3 id="topology-name"> &lt;Topology Name&gt; </h3> 

        <div id="map"> PUT A MAP HERE! </div>
        <div id="legend"><h3>Legend</h3></div>

      </div>
      <script>
        $("#input-1").on('fileloaded', function(event, file, previewId, index, reader) {
          console.log('File loaded triggered');
          console.log('Topology File Loaded');

          reader.onload = function(e) {
            var topology = JSON.parse(reader.result);
            window.test_topology = topology;
            console.log(reader.result);

            if(topology === null || topology.topologyName === ""){
              alert("Not a topology file!");
              return;
            }

            var topologyNameDom = document.getElementById("topology-name");
            topologyNameDom.innerText = topology.topologyName;

            // ADD GATEWAY MAP MARKS
            for(var i = 0; i < topology.listGateways.length; i++){
              window.addMarkerRange(topology.listGateways[i].name,
                topology.listGateways[i].coordinates.latitude,
                topology.listGateways[i].coordinates.longitude);
            }
            // ADD DEVICE MAP MARKS
            for(var i = 0; i < topology.listDevices.length; i++){
              window.addMarker(topology.listDevices[i].name,
                topology.listDevices[i].coordinates.latitude,
                topology.listDevices[i].coordinates.longitude);
            }

          };

          reader.readAsText(file);  
        });
        $("#input-1").on('fileclear', function(event) {
          console.log("File removed");

          var topologyNameDom = document.getElementById("topology-name");
          topologyNameDom.innerText = "<Topology Name>";

          // REMOVE MAP MARKS
          window.removeMarkers();

        });

        function initMap() {
          var salvador = {lat: -13.002418, lng: -38.5102597};
          var markers = [];

          var arduinoIconUrl = "/images/arduino_mark_small.png";
          var raspIconUrl = "/images/rasp_mark_small.png";
          
          var arduinoIcon = {
            url: arduinoIconUrl,
            size: new google.maps.Size(50, 33),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(25, 16),
            labelOrigin: new google.maps.Point(25, 36)
          };

          var raspIcon = {
            url: raspIconUrl,
            size: new google.maps.Size(70, 50),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(35, 25),
            labelOrigin: new google.maps.Point(35, 53)
          };

          var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 18,
            center: salvador,
            styles: [
              {
                featureType: "administrative",
                elementType: "labels",
                stylers: [
                  { visibility: "off" }
                ]
              },{
                featureType: "landscape",
                elementType: "labels",
                stylers: [
                  { visibility: "off" }
                ]
              },{
                featureType: "poi",
                elementType: "labels",
                stylers: [
                  { visibility: "off" }
                ]
              },{
                featureType: "road",
                elementType: "labels",
                stylers: [
                  { visibility: "off" }
                ]
              },{
                featureType: "transit",
                elementType: "labels",
                stylers: [
                  { visibility: "off" }
                ]
              },{
                featureType: "water",
                elementType: "labels",
                stylers: [
                  { visibility: "off" }
                ]
              }
            ]
          });

          window.addMarker = function(name, latitude, longitude){
            var posicao =  { lat: latitude, lng: longitude };
            

            var marker = new google.maps.Marker({
              position: posicao,
              map: map,
              icon: arduinoIcon,
              title: name,
              label: {
                text: name,
                fontWeight: 'bold',
                fontFamily: '"Courier New", Courier,Monospace',
                color: 'blue'
              }
            });
            
            marker.addListener('click', function(evt) {
              console.log('marker device clicked!'); 
              console.log(evt);
            });

            markers.push(marker);
          };

          var ranges = [];

          window.addMarkerRange = function(name, latitude, longitude){
            var posicao =  { lat: latitude, lng: longitude };
            
            var marker = new google.maps.Marker({
              position: posicao,
              map: map,
              icon: raspIcon,
              title: name,
              label: {
                text: name,
                fontWeight: 'bold',
                fontFamily: '"Courier New", Courier,Monospace',
                color: 'green'
              }
            });

            var WIFI_RADIUS = 50;

            marker.addListener('click', function(evt) {
              console.log('marker gateway clicked!');
              console.log(evt);
            });

            var rangeCircle = new google.maps.Circle({
              center: posicao,
              draggable: false,
              editable: false,
              fillColor: '#004de8',
              fillOpacity: 0.27,
              map: map,
              radius: WIFI_RADIUS,
              strokeColor: '#004de8',
              strokeOpacity: 0.62,
              strokeWeight: 1
            });

            markers.push(marker);
            ranges.push(rangeCircle);
          };

          window.removeMarkers = function(){
            for (var i = 0; i < markers.length; i++) {
              markers[i].setMap(null);
            }
            for (var i = 0; i < ranges.length; i++) {
              ranges[i].setMap(null);
            }
          };

          var legend = document.getElementById('legend');
          
          var icons = {
            device: {
              name: 'Device',
              icon: arduinoIconUrl
            },
            gateway: {
              name: 'Gateway',
              icon: raspIconUrl
            }
          };

          for (var key in icons) {
            var type = icons[key];
            var name = type.name;
            var icon = type.icon;
            var div = document.createElement('div');
            div.innerHTML = '<img src="' + icon + '"> ' + "<b>" + name + "</b>";
            legend.appendChild(div);
          }

          map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(legend);
        }
      </script>
      <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB4_217fZrVD4vV2fuLw3P4S7wVVAFLBiA&callback=initMap"></script>
    </div>
  </div> <!-- row -->
   <div class="alert alert-info text-center" style="margin-top: 20px;" role="alert">
    This is an work in progress project, be advised that it may contains bugs or small errors. Thanks for your understanding!
  </div>
</div>

{% endblock %}
